[tool.poetry]
name = "offline-rl"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{ include = "offline_rl", from = "src" }]

[tool.poetry.dependencies]
python = "3.10"
typer = "^0.9.0"
torch = "^2.1.0"
tqdm = "^4.66.1"
gymnasium = "^0.29.1"
matplotlib = "^3.8.0"
pandas = "^2.1.2"

[tool.poetry.group.lint.dependencies]
pre-commit = "^3.5.0"
ruff = "^0.1.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
rl = "offline_rl.main:app"

[tool.ruff]
src = ["src"]
line-length = 120
target-version = "py310"
fix = true
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "I",   # isort
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "RUF", # Ruff-specific rules
]
ignore = [
    # Docstrings not required
    "D1",
]

[tool.ruff.pycodestyle]
max-doc-length = 100

[tool.ruff.isort]
force-single-line = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"
